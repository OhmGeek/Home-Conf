# Custom Unifi Config, extending the default from the helm chart.

## Use the specific arm version for RPi. Update this to upgrade UNIFI
image:
  tag: 5.13.29-arm32v7

guiService:
  type: ClusterIP
  port: 8443

## we don't want Captive Portal to be enabled for now (we could do this later but not now)
captivePortalService:
  enabled: false
  type: ClusterIP
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  http: 8880
  https: 8843

controllerService:
  type: NodePort
  port: 8080
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  ingress:
    enabled: true
    annotations: {}
    path: /
    hosts:
      - unifi.collinsnet
    tls: []

stunService:
  type: NodePort
  port: 3478   # udp
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  loadBalancerIP:
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster

discoveryService:
  type: NodePort
  port: 10001  # udp

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - unifi.collinsnet
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

timezone: UTC

persistence:
  enabled: true
  ## unifi data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  #
  ## Applies a prefix to the directories created by the unifi container
  # subPath: unifi
  accessMode: ReadWriteOnce
  size: 1Gi